{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/chr0sy/Apps/SuperProps/node_modules/common/src/containers/App/Navbar/index.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\nimport Drawer from 'reusecore/src/elements/Drawer';\nimport Button from 'reusecore/src/elements/Button';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport HamburgMenu from '../../../components/HamburgMenu';\nimport ScrollSpyMenu from '../../../components/ScrollSpyMenu';\nimport { Container } from './navbar.style';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport SearchPanel from '../SearchPanel';\nimport LoginModal from '../LoginModal';\nimport LogoImage from '../../../assets/image/app/flixVPNlogo.png';\nimport { DrawerContext } from '../../../contexts/DrawerContext';\nimport data from '../../../data/App/MenuItems'; // Default close button for modal\n\nvar CloseModalButton = function CloseModalButton() {\n  return React.createElement(Button, {\n    className: \"modalCloseBtn\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-plus-symbol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n};\n\nvar CloseModalButtonAlt = function CloseModalButtonAlt() {\n  return React.createElement(Button, {\n    className: \"modalCloseBtn alt\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-plus-symbol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nvar Navbar = function Navbar(_ref) {\n  var navbarStyle = _ref.navbarStyle,\n      logoStyle = _ref.logoStyle,\n      buttonStyle = _ref.buttonStyle;\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Search modal handler\n  // const handleSearchModal = () => {\n  //   openModal({\n  //     config: {\n  //       className: 'search-modal',\n  //       disableDragging: true,\n  //       default: {\n  //         width: '100%',\n  //         height: '100%',\n  //         x: 0,\n  //         y: 0,\n  //       },\n  //     },\n  //     component: SearchPanel,\n  //     componentProps: {},\n  //     closeComponent: CloseModalButtonAlt,\n  //     closeOnClickOutside: false,\n  //   });\n  // };\n  // // Authentication modal handler\n  // const handleLoginModal = () => {\n  //   openModal({\n  //     config: {\n  //       className: 'login-modal',\n  //       disableDragging: true,\n  //       default: {\n  //         width: '100%',\n  //         height: '100%',\n  //         x: 0,\n  //         y: 0,\n  //       },\n  //     },\n  //     component: LoginModal,\n  //     componentProps: {},\n  //     closeComponent: CloseModalButton,\n  //     closeOnClickOutside: false,\n  //   });\n  // };\n  // Toggle drawer\n\n\n  var toggleHandler = function toggleHandler() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return React.createElement(NavbarWrapper, _extends({}, navbarStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    href: \"#\",\n    logoSrc: LogoImage,\n    title: \"Agency\",\n    logoStyle: logoStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"textButton\",\n    onClick: handleSearchModal,\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-magnifying-glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"textButton\",\n    onClick: handleLoginModal,\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: React.createElement(HamburgMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(ScrollSpyMenu, {\n    menuItems: data.menuItems,\n    drawerClose: true,\n    offset: -100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })))));\n}; // Navbar style props\n\n\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  wrapperStyle2: PropTypes.object\n};\nNavbar.defaultProps = {\n  navbarStyle: {\n    minHeight: '70px'\n  },\n  logoStyle: {\n    width: ['100px', '140px']\n  },\n  buttonStyle: {\n    minHeight: '70px',\n    color: '#fff'\n  }\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/chr0sy/Apps/SuperProps/node_modules/common/src/containers/App/Navbar/index.js"],"names":["React","useContext","PropTypes","NavbarWrapper","Drawer","Button","Logo","HamburgMenu","ScrollSpyMenu","Container","openModal","closeModal","SearchPanel","LoginModal","LogoImage","DrawerContext","data","CloseModalButton","CloseModalButtonAlt","Navbar","navbarStyle","logoStyle","buttonStyle","state","dispatch","toggleHandler","type","display","alignItems","handleSearchModal","handleLoginModal","isOpen","menuItems","propTypes","object","wrapperStyle2","defaultProps","minHeight","width","color"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\nimport Drawer from 'reusecore/src/elements/Drawer';\nimport Button from 'reusecore/src/elements/Button';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport HamburgMenu from '../../../components/HamburgMenu';\nimport ScrollSpyMenu from '../../../components/ScrollSpyMenu';\nimport { Container } from './navbar.style';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport SearchPanel from '../SearchPanel';\nimport LoginModal from '../LoginModal';\n\nimport LogoImage from '../../../assets/image/app/flixVPNlogo.png';\n\nimport { DrawerContext } from '../../../contexts/DrawerContext';\n\nimport data from '../../../data/App/MenuItems';\n\n// Default close button for modal\nconst CloseModalButton = () => (\n  <Button\n    className=\"modalCloseBtn\"\n    variant=\"fab\"\n    onClick={() => closeModal()}\n    icon={<i className=\"flaticon-plus-symbol\" />}\n  />\n);\nconst CloseModalButtonAlt = () => (\n  <Button\n    className=\"modalCloseBtn alt\"\n    variant=\"fab\"\n    onClick={() => closeModal()}\n    icon={<i className=\"flaticon-plus-symbol\" />}\n  />\n);\nconst Navbar = ({ navbarStyle, logoStyle, buttonStyle }) => {\n  const { state, dispatch } = useContext(DrawerContext);\n  // Search modal handler\n  // const handleSearchModal = () => {\n  //   openModal({\n  //     config: {\n  //       className: 'search-modal',\n  //       disableDragging: true,\n  //       default: {\n  //         width: '100%',\n  //         height: '100%',\n  //         x: 0,\n  //         y: 0,\n  //       },\n  //     },\n  //     component: SearchPanel,\n  //     componentProps: {},\n  //     closeComponent: CloseModalButtonAlt,\n  //     closeOnClickOutside: false,\n  //   });\n  // };\n  // // Authentication modal handler\n  // const handleLoginModal = () => {\n  //   openModal({\n  //     config: {\n  //       className: 'login-modal',\n  //       disableDragging: true,\n  //       default: {\n  //         width: '100%',\n  //         height: '100%',\n  //         x: 0,\n  //         y: 0,\n  //       },\n  //     },\n  //     component: LoginModal,\n  //     componentProps: {},\n  //     closeComponent: CloseModalButton,\n  //     closeOnClickOutside: false,\n  //   });\n  // };\n  // Toggle drawer\n  const toggleHandler = () => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n  };\n\n  return (\n    <NavbarWrapper {...navbarStyle}>\n      <Container>\n        <Logo\n          href=\"#\"\n          logoSrc={LogoImage}\n          title=\"Agency\"\n          logoStyle={logoStyle}\n        />\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <Button\n            variant=\"textButton\"\n            onClick={handleSearchModal}\n            icon={<i className=\"flaticon-magnifying-glass\" />}\n          />\n          <Button\n            variant=\"textButton\"\n            onClick={handleLoginModal}\n            icon={<i className=\"flaticon-user\" />}\n          />\n          <Drawer\n            width=\"420px\"\n            placement=\"right\"\n            drawerHandler={<HamburgMenu />}\n            open={state.isOpen}\n            toggleHandler={toggleHandler}\n          >\n            <ScrollSpyMenu\n              menuItems={data.menuItems}\n              drawerClose={true}\n              offset={-100}\n            />\n          </Drawer>\n        </div>\n      </Container>\n    </NavbarWrapper>\n  );\n};\n\n// Navbar style props\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  wrapperStyle2: PropTypes.object,\n};\n\nNavbar.defaultProps = {\n  navbarStyle: {\n    minHeight: '70px',\n  },\n  logoStyle: {\n    width: ['100px', '140px'],\n  },\n  buttonStyle: {\n    minHeight: '70px',\n    color: '#fff',\n  },\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}